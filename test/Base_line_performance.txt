Baseline performance

Dec 20, 2023

Performance test setup

============================================================
sjc-test-1 machine
------------------------------------------------------------
Erlang performance tester app (aspike-perf)
Request/Response round-trip time is measured at this level
------------------------------------------------------------
Erlang Aerospike Client (aspike)
------------------------------------------------------------
Erlang generic network transport (shackle)
------------------------------------------------------------
Erlang runtime
============================================================
                     |  ^
                     |  |
                     V  |
============================================================
 network infrastructure, ping time ~ 0.100 ms
============================================================
                     |  ^
                     |  |
                     V  |
============================================================
Nodes: .201 - .210
------------------------------------------------------------
Namespace: pi-stream, Set: set-gateway, Bin: bin1
------------------------------------------------------------
SJC Aerospike cluster
============================================================

Baseline 1.
1.1. Select node;
1.2. Send 100,000 requests to the selected node over 1 connection;
1.3. Mesure: number of requests per second processed;
1.4. Repeat for each node;
1.5. Results: 1,000+ requests/sec processed by each node.

Baseline 2.
1.1. Select 2 nodes;
1.2. Send 100,000 requests to each selected node over 1 connection;
1.3. Mesure: number of requests per second processed;
1.4. Results: 1,000+ requests/sec processed by each node.

Baseline 3.
1.1. Select 3 nodes;
1.2. Send 100,000 requests to each selected node over 1 connection;
1.3. Mesure: number of requests per second processed;
1.4. Results: 1,000+ requests/sec processed by each node.
...

Baseline 10.
1.1. Select 10 nodes;
1.2. Send 100,000 requests to each selected node over 1 connection;
1.3. Mesure: number of requests per second processed;
1.4. Results: 1,100+ requests/sec processed by each node.

Observations:
1. Each node maintains 1000+ requests/sec regardless of other nodes activities;
2. Warm-up effect: requests/sec increased over time from 1,000 to 1,100.


Further test plans:

Baseline 11.
1.1. Select 10 nodes;
1.2. Send 100,000 requests to each selected node over 2 connection;
1.3. Mesure: number of requests per second processed per connection;
1.4. Mesure: number of requests per second processed per node.


Observations: (see details below)
1. Each node maintains 3,400 requests/sec;
2. 10 node clauster maintains 34,000 requests/sec;
3. Observed a 'hot-key' situation when 70,000+ requests/sec to the whole clauster.

Baseline 11.
11.1. Select 10 nodes;
11.2. Establish 2 connections to each node;
11.3. Send 100,000 put (write) requests over each connection simultaneously;
11.4. Measure: number of requests per second per connection processed;
11.5. Result: ~900 requests/sec/connection;
11.6. Result: 18,000 requests/sec processed by cluster.

Baseline 12.
12.1. Select 10 nodes;
12.2. Establish 4 connections to each node;
12.3. Send 100,000 put (write) requests over each connection simultaneously;
12.4. Measure: number of requests per second per connection processed;
12.5. Result: ~850 requests/sec/connection;
12.6. Result: 34,000 requests/sec processed by cluster.

Baseline 13.
13.1. Select 10 nodes;
13.2. Establish 8 connections to each node;
13.3. Send 10,000 put (write) requests over each connection simultaneously;
13.4. Measure: number of requests per second per connection processed;
13.5. Result: ~890 requests/sec/connection;
13.6. Observed: a 'hot-key' situation - Too may concurrent requests for one record.
